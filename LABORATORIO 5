; UNIVERSIDAD DEL VALLE DE GUATEMALA
; DEPARTAMENTO DE INGENIERIA ELECTRONICA, MECATRONICA Y BIOMEDICA
; MICROCONTROLADORES 
; DOCUMENTO: LAB5
; DISPOSITIVO: PIC16F887
; AUTOR: BRAYAN GABRIEL GIRON GARCIA
; PROGRAMA: CONTADOR BINARIO, HEXADECIMAL Y DECIMAL.
; CREADO: 02 MARZO, 2021
;-------------------------------------------------------------------------------
PROCESSOR 16F887
#include <xc.inc>

;-------------------------- CONFIGURACION WORD1 --------------------------------
 CONFIG FOSC=INTRC_NOCLKOUT //Oscilador interno sin salidas
 CONFIG WDTE=OFF	    //WDT disabled (reinicio repetitivo del pic)
 CONFIG PWRTE=ON	    //PWRT enabled (espera de 72ms al iniciar
 CONFIG MCLRE=OFF	    //pin MCLR se utiliza como I/O
 CONFIG CP=OFF		    //sin protección de código
 CONFIG CPD=OFF		    //sin protección de datos
 
 CONFIG BOREN=OFF	    //sin reinicio cuando el voltaje baja de 4v
 CONFIG IESO=OFF	    //Reinicio sin cambio de reloj de interno a externo
 CONFIG FCMEN=OFF	    //Cambio de reloj externo a interno en caso de falla
 CONFIG LVP=ON		    //Programación en bajo voltaje permitida
 
;-------------------------- CONFIGURACION WORD2 --------------------------------
 CONFIG WRT=OFF	            //Protección de autoescritura 
 CONFIG BOR4V=BOR40V        //Reinicio abajo de 4V 
 
 UP	EQU 0
 DOWN	EQU 1
	
;----------------------------------- MACROS ------------------------------------ 
 REIN_TMR0 MACRO    ; CREAR MACRO REIN_TMR0.
    BANKSEL TMR0    ; SELECIONAMOS EL BANCO DEL TMR0.
    MOVLW   217     ; ASIGNAMOS EL VALOR DE 217 AL TMR0, 
    MOVWF   TMR0    ; EL CUAL OBTUBIMOS CON LA FORMULA PARA UN TIEMPO DE 10MS.    
    BCF	    T0IF    ; LIMPIAMOS LA BANDERA DEL TMR0.
    ENDM  

;---------------------------- VARIABLES DEL PROGRAMA ---------------------------
 PSECT udata_bank0  ; CREAMOS LAS VARIABLES A UTILIZAR EN EL PROGRAMA. 
 VAR:         DS 1  ; VARIABLE PARA GUARDAR EL VALOR DEL CONTADOR BINARIO   
 BANDERAS:    DS 1  ; VARIABLE PARA SELECION DE DISPLAYS.
 NIBBLE_1:    DS 2  ; VARIABLE PARA GUARDAR EL NIBBLE MENOS SIGNIFICATIVO DE VAR.
 NIBBLE_2:    DS 2  ; VARIABLE PARA GUARDAR EL NIBBLE MAS SIGNIFICATIVO DE VAR.
 DISP_HEX1:   DS 2  ; VARIABLE PARA GUARDAR EL VALOR DEL DISPLAY1 EN HEXADECIMAL.
 DISP_HEX2:   DS 2  ; VARIABLE PARA GUARDAR EL VALOR DEL DISPLAY2 EN HEXADECIMAL.
 V1:          DS 2  ; VARIABLE CON EL VALOR DEL NUMERO A SEPARAR EN CEN, DEC Y UNI.
 UNID:        DS 1  ; VARIABLE CON EL NUMERO DE UNIDADES DEL VALOR DE V1.
 DECE:        DS 1  ; VARIABLE CON EL NUMERO DE DECENAS DEL VALOR DE V1.
 CENT:        DS 1  ; VARIABLE CON EL NUMERO DE CENTENAS DEL VALOR DE V1.
 UNID1:       DS 1  ; VARIABLE CON EL NUMERO DE LA UNIDAD A MOSTRAR EN DISPLAYS.  
 DECE1:       DS 1  ; VARIABLE CON EL NUMERO DE LA DECENA A MOSTRAR EN DISPLAYS.
 CENT1:       DS 1  ; VARIABLE CON EL NUMERO DE LA CENTENA A MOSTRAR EN DISPLAYS.
 
;-------------------------- VARIABLES DE INTERRUPCION -------------------------
 PSECT udata_shr    ; COMMON MEMORY
 W_TEMP:      DS 1  ; VARIABLE PARA GUARDAR EL VALOR TEMPORAL DE "W".
 STATUS_TEMP: DS 1  ; VARIABLE PARA GUARDAR EL VALOR TEMPORAL DEL "STATUS".

;--------------------------------- VECTORES ------------------------------------    
;VECTOR DE RESTE:
 PSECT resVect, class=CODE, abs, delta=2
 ORG 00h
 RESET_VEC:
    PAGESEL MAIN
    GOTO    MAIN

; VECTOR DE INTERRUPCIONES:
 PSECT intVect, class=CODE, abs, delta=2
 ORG 04h
 PUSH:                 
    MOVWF W_TEMP        ; GUARDAMOS EL VALOR DE "W" EN UNA VARIABLE TEMPORAL.
    SWAPF STATUS,W      ; GUARDAMOS EL VALOR DEL "STATUS" EN UNA VARIABLE TEMPORAL.
    MOVWF STATUS_TEMP 
    
 ISR:                   
    BTFSC RBIF          ; VERIFICAMOS LA BANDERA DE INTERRUPCION RBIF.          
    CALL  int_ioCB      ; LLAMAMOS A SUB RUTINA DE INTERRUPCION int_ioCB.       
    BTFSC T0IF          ; VERIFICAMOS LA BANDERA DEL TMR0.     
    CALL  INTERR_TMR0   ; LLAMAMOS A LA SUBRUTINA DE INTERR_TMR0.
    
    
 POP:                   
    SWAPF STATUS_TEMP,W ; ASIGNAMOS EL VALOR TEMPORAR DEL STATUS A W. 
    MOVF  STATUS        ; LE REGRESAMOS AL STATUS SU VALOR ANTES DE LA INTERRUP.  
    SWAPF W_TEMP,F      ; LE REGRESAMOS A W SU VALOR ANTES DEL LA INTERRUPCION.
    SWAPF W_TEMP,W
    RETFIE
    
;------------------------- SUBRUTINAS DE INTERRUPCION --------------------------
 int_ioCB:
    BANKSEL PORTB       ; SELECIONAMOS EL BANCO 00.
    BTFSS   PORTB,UP    ; REVISAMOS EL ESTADO DEL BOTON DE INCREMENTAR.
    INCF    PORTA       ; INCREMENTAMOS EL PORTA.
    BTFSS   PORTB,DOWN  ; REVISAMOS EL ESTADO DEL BOTON DE DECREMENTAR.
    DECF    PORTA       ; DECREMENTAMOS EL PORTA
    BCF	    RBIF        ; LIMPIAMOS LA BANDERA DE LA INTERUPCION RBIF
    RETURN   
    
 INTERR_TMR0:              
    REIN_TMR0	        ; REINICIAMOS EL TMR0
    CLRF    PORTB       ; LIMPIAMOS EL PORTB
    BCF     CARRY       ; LIMPIAMOS EL CARRY   
    BTFSC   BANDERAS,1  ; VERIFICAMOS SI DEBEMOS ENCENDER EL DISPLAY_1.
    GOTO    HEXA_1      ; VAMOS A LA SUBRUTINA HEXA_1.
    BTFSC   BANDERAS,2  ; VERIFICAMOS SI DEBEMOS ENCENDER EL DISPLAY_2.
    GOTO    HEXA_2      ; VAMOS A LA SUBRUTINA HEXA_2.
    BTFSC   BANDERAS,3  ; VERIFICAMOS SI DEBEMOS ENCENDER EL DISPLAY_3.
    GOTO    DISP_CENT   ; VAMOS A LA SUBRUTINA DISPLAY_CENTENAS.
    BTFSC   BANDERAS,4  ; VERIFICAMOS SI DEBEMOS ENCENDER EL DISPLAY_4.
    GOTO    DISP_DECE   ; VAMOS A LA SUBRUTINA DISPLAY_DECENAS.
    BTFSC   BANDERAS,5  ; VERIFICAMOS SI DEBEMOS ENCENDER EL DISPLAY_5.
    GOTO    DISP_UNID   ; VAMOS A LA SUBRUTINA DISPLAY_UNIDADES.
    MOVLW   00000001B   ; MOVEMOS EL VALOR DE 1 A "W".
    MOVWF   BANDERAS    ; SETEAMOS BANDERAS CON UN "1" EN LA POSICION 0.
  
 SELEC_DISP:            ; SUBRUTINA DE SELECCION DE VISUALIZACION DE DISPLAYS.
    RLF     BANDERAS,1  ; CORREMOS EL "1" UNA POSICION A LA IZQUIERDA PARA
    RETURN              ; CAMBIAR DE DISPLAY.
    
 HEXA_1:
    MOVF    DISP_HEX1,w ; MOVEMOS EL VALORS DE DISP_HEX1 A "W".
    MOVWF   PORTC       ; MOVEMOS EL VALOR DE DISP_HEX1 AL DISPLAY DEL PORTC.
    BSF	    PORTB, 3    ; ACTIVAMOS EL PRIMER DIGITO DEL DISPLAY DEL PORTC. 
    GOTO    SELEC_DISP  ; VAMOS A LA SUBRUTINA SELEC_DISP.
    
 HEXA_2:        
    MOVF    DISP_HEX2,w ; MOVEMOS EL VALORS DE DISP_HEX2 A "W".
    MOVWF   PORTC       ; MOVEMOS EL VALOR DE DISP_HEX2 AL DISPLAY DEL PORTC.
    BSF	    PORTB, 4    ; ACTIVAMOS EL SEGUNDO DIGITO DEL DISPLAY DEL PORTC.
    GOTO    SELEC_DISP  ; VAMOS A LA SUBRUTINA SELEC_DISP.
    
 DISP_CENT:
    MOVF    CENT1,W     ; MOVEMOS EL VALORS DE CENT1 A "W".
    MOVWF   PORTD       ; MOVEMOS EL VALOR DE  CENT1 AL DISPLAY DEL PORTD.
    BSF     PORTB,5     ; ACTIVAMOS EL DIGITO DE CENTENAS DEL DISPLAY DEL PORTD.
    GOTO    SELEC_DISP  ; VAMOS A LA SUBRUTINA SELEC_DISP.
 
 DISP_DECE:
    MOVF    DECE1,W     ; MOVEMOS EL VALORS DE DECE1 A "W".
    MOVWF   PORTD       ; MOVEMOS EL VALOR DE DECE1 AL DISPLAY DEL PORTD.
    BSF     PORTB,6     ; ACTIVAMOS EL DIGITO DECENAS DEL DISPLAY DEL PORTD.
    GOTO    SELEC_DISP  ; VAMOS A LA SUBRUTINA SELEC_DISP.   

 DISP_UNID:
    MOVF    UNID1,W     ; MOVEMOS EL VALORS DE UNID1 A "W".
    MOVWF   PORTD       ; MOVEMOS EL VALOR DE UNID1 AL DISPLAY DEL PORTD.
    BSF     PORTB,7     ; ACTIVAMOS EL DIGITO UNIDADES DEL DISPLAY DEL PORTD.
    GOTO    SELEC_DISP  ; VAMOS A LA SUBRUTINA SELEC_DISP.
    
  
;------------------------------- CODIGO PRINCIPAL ------------------------------
 PSECT CODE, delta=2, abs
 ORG 100h	         

 TABLA:                 ; TABLA CON VALORES DEL DISPLAY.
    CLRF  PCLATH
    BSF   PCLATH,0
    ANDLW 0x0F
    ADDWF PCL
    RETLW 00111111B     ; 0
    RETLW 00000110B     ; 1
    RETLW 01011011B     ; 2
    RETLW 01001111B     ; 3
    RETLW 01100110B     ; 4
    RETLW 01101101B     ; 5
    RETLW 01111101B     ; 6
    RETLW 00000111B     ; 7
    RETLW 01111111B     ; 8
    RETLW 01101111B     ; 9
    RETLW 01110111B     ; A
    RETLW 01111100B     ; b
    RETLW 00111001B     ; C
    RETLW 01011110B     ; d
    RETLW 01111001B     ; E
    RETLW 01110001B     ; F  
 
;------------------------------------ MAIN -------------------------------------
 MAIN:
    CALL CONFIG_IO       ; LLAMAMOSA LA CONFIGURACION DE ENTRADAS Y SALIDAS.
    CALL CONFIG_RELOJ    ; LLAMAMOS LA CONFIGURACION DEL RELOJ INTERNO.
    CALL CONFIG_IOChange ; LLAMAMOS A LA CONFIGURACION DE LOS BOTONES EN PORTB.
    CALL CONFIG_TMR0_IE  ; CONFIGURAMOS EL TMR0 Y HABILITAMOS INTERRUPCIONES.
    BANKSEL PORTA        ; SELECCIONAMOS EL BANCO 00.
    
;------------------------------------ LOOP -------------------------------------
 LOOP:
    MOVF  PORTA,W        ; MOVEMOS EL VALOR DEL CONTADOR BINARIO A "W".
    MOVWF VAR            ; MOVEMOS EL VALOR DE "W" A "VAR".
    MOVWF V1             ; MOVEMOS EL VALOR DE "W" A "V1".
    CALL  SEPARAR_NIBBLE ; SEPARAMOS EL VALOR DE "VAR" EN 2 NIBBLES.
    CALL  CONFIG_DISPLAY ; TRANSFORMAMOS LOS VALORES DE LOS NIBLES PARA MOSTRARSE EN EL DISPLAY HEXADECIMAL.
    CALL  CENTENAS       ; SEPARAMOS EL VALOR DE "V1" EN CENTENAS, DECENAS Y UNIDADES.
    CALL  DISPLAY_UDC    ; LE ASIGNAMOS A LAS CENT,DEC,UNID SU VALOR CORRESPONDIENTE EN EL DISPLAY DECIMAL.
    GOTO  LOOP           
 
;--------------------------- SUBRUTINAS PRINCIPALES ----------------------------  

 SEPARAR_NIBBLE:
    MOVF   VAR, W   ; MOVEMOS EL VALOR DE "VAR" A "W".
    ANDLW  0x0F     ; LIMPIAMOS LOS 4 BITS MAS SIGNIFICATIVOS DE "W".
    MOVWF  NIBBLE_1 ; MOVEMOS LOS 4 BITS MENOS SIGNIFICATIVOS DE VAR A NIBBLE_1.
    SWAPF  VAR, W   ; INVERTIMOS LOS NIBLES DEL VALOR DE "VAR". 
    ANDLW  0x0F     ; LIMPIAMOS LOS 4 BITS MAS SIGNIFICATIVOS DE "W".
    MOVWF  NIBBLE_2 ; MOVEMOS LOS 4 BITS MAS SIGNIFICATIVOS DE VAR A NIBBLE_2.
    RETURN
    
 CONFIG_DISPLAY:
    MOVF   NIBBLE_1,W ; MOVEMOS EL VALOR DE "NIBBLE_1" A "W".
    CALL   TABLA      ; ASIGNAMOS A "W" EL VALOR CORRESPONDIENTE PARA EL DISPLAY.
    MOVWF  DISP_HEX1  ; MOVEMOS EL VALOR DE "W" A "DISP_HEX1".
    MOVF   NIBBLE_2,W ; MOVEMOS EL VALOR DE "NIBBLE_2" A "W".
    CALL   TABLA      ; ASIGNAMOS A "W" EL VALOR CORRESPONDIENTE PARA EL DISPLAY.
    MOVWF  DISP_HEX2  ; MOVEMOS EL VALOR DE "W" A "DISP_HEX2".
    RETURN

 CENTENAS:
   CLRF   CENT        ; LIMPIAMOS LA VARIABLE CENT.
   MOVLW  01100100B   ; ASIGNAMOS EL VALOR DE "100" A "W".
   SUBWF  V1,1        ; RESTMOS "100" AL VALOR DE V1.
   BTFSS  STATUS,0    ; VERIFICAMOS SI EL RESULTADO DE LA RESTA ES NEGATIVO. 
   GOTO   DECENAS     ; SI LA RESTA ES NEGATIVA, PASAMOS A LA SUBRUTINA DECENAS.
   INCF   CENT        ; SI LA RESTA AUN ES POSITVA O CERO, INCREMENTA "CENT".
   GOTO   $-5         ; REGRESAMOS 5 LINEAS PARA RESTAR NUEVAMENTE.
          
 DECENAS: 
    CLRF  DECE        ; LIMPIAMOS LA VARIABLE "DECE".
    MOVLW 01100100B   ; ASIGNAMOS EL VALOR DE "100" A "W".
    ADDWF V1,1        ; LE SUMAMOS 100 A V1, PARA QUE NOS QUEDE EL RESIDUO DE LA RESTA ANTERIOR.
    MOVLW 00001010B   ; ASIGNAMOS EL VALOR DE "10" A "W".
    SUBWF V1,1        ; RESTMOS "10" AL VALOR DE V1. 
    BTFSS STATUS,0    ; VERIFICAMOS SI EL RESULTADO DE LA RESTA ES NEGATIVO.
    GOTO  UNIDADES    ; SI LA RESTA ES NEGATIVA, PASAMOS A LA SUBRUTINA UNIDADES.
    INCF  DECE        ; SI LA RESTA AUN ES POSITVA O CERO, INCREMENTA "DECE".
    GOTO  $-5         ; REGRESAMOS 5 LINEAS PARA RESTAR NUEVAMENTE.
    
 UNIDADES:
    CLRF  UNID        ; LIMPIAMOS LA VARIABLE "UNID".
    MOVLW 00001010B   ; ASIGNAMOS EL VALOR DE "10" A "W". 
    ADDWF V1,1        ; LE SUMAMOS 10 A V1, PARA QUE NOS QUEDE EL RESIDUO DE LA RESTA ANTERIOR.
    MOVLW 00000001B   ; ASIGNAMOS EL VALOR DE "1" A "W".
    SUBWF V1,1        ; RESTMOS "1" AL VALOR DE V1. 
    BTFSS STATUS,0    ; VERIFICAMOS SI EL RESULTADO DE LA RESTA ES NEGATIVO.
    RETURN            ; SI LA RESTA ES NEGATIVA, REGRESAMOS AL LOOP.
    INCF  UNID        ; SI LA RESTA AUN ES POSITVA O CERO, INCREMENTA "UNID".
    GOTO  $-5         ; REGRESAMOS 5 LINEAS PARA RESTAR NUEVAMENTE.

DISPLAY_UDC:          
    MOVF  CENT,W      ; MOVEMOS EL VALOR DE "CENT" A "W".
    CALL  TABLA       ; ASIGNAMOS A "W" EL VALOR CORRESPONDIENTE PARA EL DISPLAY. 
    movwf CENT1       ; MOVEMOS EL VALOR DE "W" A "CENT1".
    MOVF  DECE,W      ; MOVEMOS EL VALOR DE "DECE" A "W". 
    CALL  TABLA       ; ASIGNAMOS A "W" EL VALOR CORRESPONDIENTE PARA EL DISPLAY. 
    movwf DECE1       ; MOVEMOS EL VALOR DE "W" A "DECE1".
    MOVF  UNID,W      ; MOVEMOS EL VALOR DE "UNID" A "W". 
    CALL  TABLA       ; ASIGNAMOS A "W" EL VALOR CORRESPONDIENTE PARA EL DISPLAY. 
    MOVWF UNID1       ; MOVEMOS EL VALOR DE "W" A "UNID1".
    RETURN  
    
;----------------------- SUBRUTINAS DE COMFIGURACION ---------------------------  
 CONFIG_IO:
    BANKSEL ANSEL       ; SELECCIONAMOS EL BANCO 03.
    CLRF    ANSEL       ; DEJAMOS TODOS LOS PINES COMO DIGITALES 
    CLRF    ANSELH
    BANKSEL TRISA       ; SELECCIONAMOS EL BANCO 01.
    CLRF    TRISA       ; ASIGNAMOS TODO EL PORTA COMO SALIDAS.
    CLRF    TRISC       ; ASIGNAMOS TODO EL PORTC COMO SALIDAS.
    CLRF    TRISD       ; ASIGNAMOS TODO EL PORTD COMO SALIDAS.
    MOVLW   00000111B   ; ASIGNAMOS LOS 3 PRIMEROS PINES DEL PORTB COMO ENTRADAS  
    MOVWF   TRISB       ; Y LOS ULTIMOS 5 PINES COMO SALIDAS. 
    BCF	    OPTION_REG,7 ;RBPU Enable bit - Habilitar.
    BSF	    WPUB, UP     ;
    BSF	    WPUB, DOWN   ;
    BANKSEL PORTA        ; SELECCIONAMOS EL BANCO 00.
    CLRF    PORTA        ; LIMPIAMOS EL PORTA.
    CLRF    PORTB        ; LIMPIAMOS EL PORTB.
    CLRF    PORTC        ; LIMPIAMOS EL PORTC.
    CLRF    PORTD        ; LIMPIAMOS EL PORTD.
    RETURN 
    
 CONFIG_IOChange:
    BANKSEL TRISA        ; SELECCIONAMOS EL BANCO 01.
    BSF	    IOCB,UP      ; 
    BSF	    IOCB,DOWN    ; 
    BANKSEL PORTA        ; SELECCIONAMAS EL BANCO 00.
    MOVF    PORTB, W     ; CONDICION MISMATCH.
    BCF	    RBIF         ; LIMPIAMOS LA BANDERA DE LA INTERUPCION DEL PORTB. 
    RETURN 
    
 CONFIG_RELOJ:
    BANKSEL OSCCON	; SELECIONAMOS EL BANCO DEL OSCCON. 
    BSF	    IRCF2	; OSCCON configuración bit2 IRCF.
    BSF	    IRCF1	; OSCCON configuracuón bit1 IRCF.
    BCF	    IRCF0	; OSCCON configuración bit0 IRCF.
    BSF	    SCS		; SELECIONAMOS UN JUEGO INTERNO CON FRECUENCIA DE 4MHZ.
    RETURN                  
                              
 CONFIG_TMR0_IE:         
    BANKSEL OPTION_REG  ; SELECCIONAMOS EL BANCO DEL OPTION_REG.
    BCF	    T0CS        ; SELECIONAMOS EL RELOJ INTERNO.
    BCF	    PSA	        ; PRESCALER.
    BSF	    PS2
    BSF	    PS1
    BSF	    PS0	        ; PS = 111, ASIGNAMOS EL VALOR DE 256 AL PRESCALER.
    REIN_TMR0           ; Macro reiniciar tmr0
    BSF GIE             ; HABILIATAMOS LAS INTERRUPCIONES GLOBALES.
    BSF	RBIE            ; HABILITAMOS LA INTERRUPCION DEL PORTB.
    BSF T0IE            ; HABILITAMOS LA INTERRUPCION DEL TMR0.
    BCF T0IF            ; LIMPIAMOS LA BANDERA DEL TMR0.
    RETURN    
    
 END
